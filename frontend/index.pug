html
    head
        title= title
        style.
            body {
                font-family: Arial, sans-serif;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                height: 100vh;
                margin: 0;
                background-color: #f4f4f4;
            }

            .menu-buttons, .form-container {
                width: 100%;
                max-width: 400px;
                display: flex;
                flex-direction: column;
                gap: 15px;
                margin-bottom: 20px;
            }

            .menu-buttons button {
                background-color: #007BFF;
                color: white;
                padding: 10px;
                font-size: 16px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

            .menu-buttons button:hover {
                background-color: #0056b3;
            }

            .hidden {
                display: none;
            }

            input, select, button {
                padding: 10px;
                font-size: 16px;
                border: 1px solid #ccc;
                border-radius: 5px;
            }

            button {
                background-color: #4CAF50;
                color: white;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

            button:hover {
                background-color: #45a049;
            }

            .error, .success {
                font-size: 14px;
                padding: 10px;
                border-radius: 5px;
            }

            .error {
                background-color: #f44336;
                color: white;
            }

            .success {
                background-color: #9eeea3;
                color: #b0aeae;
                padding: 20px;
                font-size: 18px;
                border-radius: 10px;
                max-width: 500px;
                margin: 20px auto;
                text-align: center;
            }
    body
        h1= title
        .menu-buttons
            button(onclick="showForm('vip')") Создать VIP ссылку
            button(onclick="showForm('regular')") Создать обычную ссылку
            button(onclick="showForm('info')") Посмотреть информацию о ссылке
            button(onclick="showForm('delete')") Удалить ссылку

        .form-container.hidden#vipForm
            form(id="vipShortenerForm")
                input(type="url" placeholder="Введите длинную ссылку" name="longUrl" required)
                input(type="text" placeholder="VIP ключ (опционально)" name="vipKey")
                input(type="number" placeholder="TTL (время жизни)" name="timeToLive" value=10 required)
                select(name="timeToLiveUnit")
                    option(value="SECONDS") Секунды
                    option(value="MINUTES") Минуты
                    option(value="HOURS" selected) Часы
                    option(value="DAYS") Дни
                button(type="submit") Сократить VIP ссылку

        .form-container.hidden#regularForm
            form(id="regularShortenerForm")
                input(type="url" placeholder="Введите длинную ссылку" name="longUrl" required)
                button(type="submit") Сократить обычную ссылку

        .form-container.hidden#deleteForm
            form(id="deleteShortenerForm")
                input(type="text" placeholder="Введите ключ ссылки" name="shortKey" required)
                button(type="submit") Удалить ссылку

        .form-container.hidden#infoForm
            form(id="showInfoShortenerForm")
                input(type="text" placeholder="Введите ключ ссылки" name="shortKey" required)
                button(type="submit") посмотреть информацию

        .error.hidden Ошибка: Проверьте данные или попробуйте позже.
        .success.hidden Сокращённая ссылка:
            a(href="#" target="_blank")
            br
            | Ключ для управления ссылкой:
            b

        script.
            function showForm(formId) {
                document.querySelectorAll('.form-container').forEach(form => form.classList.add('hidden'));
                document.getElementById(formId + 'Form').classList.remove('hidden');
            }

            document.getElementById('vipShortenerForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                await handleFormSubmitForUrlCreation('/vip_shorten', this);
            });

            document.getElementById('regularShortenerForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                await handleFormSubmitForUrlCreation('/common_shorten', this);
            });

            async function handleFormSubmitForUrlCreation(url, form) {
                const formData = new FormData(form);
                const jsonData = {};
                formData.forEach((value, key) => jsonData[key] = value);

                try {
                    const response = await fetch(url, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(jsonData)
                    });

                    const result = await response.json();
                    if (response.ok) {
                        document.querySelector('.success').classList.remove('hidden');
                        document.querySelector('.success a').textContent = result.shortUrl || 'Успешно!';
                        document.querySelector('.success a').href = result.shortUrl || '#';
                        document.querySelector('.success b').textContent = result.secretKey || 'Нет ключа';
                        document.querySelector('.error').classList.add('hidden');
                    } else {
                        document.querySelector('.error').textContent = `Ошибка: ${result.error}`;
                        document.querySelector('.error').classList.remove('hidden');
                        document.querySelector('.success').classList.add('hidden');
                    }
                } catch (error) {
                    document.querySelector('.error').textContent = "Ошибка: невозможно соединиться с сервером.";
                    document.querySelector('.error').classList.remove('hidden');
                    document.querySelector('.success').classList.add('hidden');
                }
            }

            document.getElementById('deleteShortenerForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                await handleFormDeleting('/delete', this);
            });

            async function handleFormDeleting(url, form) {
                const formData = new FormData(form);
                const secretKey = formData.get("shortKey");

                if (!secretKey) {
                    document.querySelector('.error').textContent = "Ошибка: не указан ключ!";
                    document.querySelector('.error').classList.remove('hidden');
                    document.querySelector('.success').classList.add('hidden');
                    return;
                }

                try {
                    const deleteUrl = `${url}/${secretKey}`;

                    const response = await fetch(deleteUrl, {
                        method: 'DELETE',
                        headers: {'Content-Type': 'application/json'},
                    });

                    const result = await response.json();
                    if (response.ok) {
                        document.querySelector('.success').classList.remove('hidden');
                        document.querySelector('.success a').textContent = result.message || 'Удаление прошло успешно!';
                        document.querySelector('.success a').href = '#';
                        document.querySelector('.error').classList.add('hidden');
                    } else {
                        document.querySelector('.error').textContent = `Ошибка: ${result.error || 'Неизвестная ошибка'}`;
                        document.querySelector('.error').classList.remove('hidden');
                        document.querySelector('.success').classList.add('hidden');
                    }
                } catch (error) {
                    document.querySelector('.error').textContent = "Ошибка: невозможно соединиться с сервером.";
                    document.querySelector('.error').classList.remove('hidden');
                    document.querySelector('.success').classList.add('hidden');
                }
            }

            document.getElementById('showInfoShortenerForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                await handleFormGettingInfo('/get_info', this);
            });

            async function handleFormGettingInfo(url, form) {
                const formData = new FormData(form);
                const secretKey = formData.get("shortKey");

                if (!secretKey) {
                    document.querySelector('.error').textContent = "Ошибка: не указан ключ!";
                    document.querySelector('.error').classList.remove('hidden');
                    document.querySelector('.success').classList.add('hidden');
                    return;
                }

                try {
                    const deleteUrl = `${url}/${secretKey}`;

                    const response = await fetch(deleteUrl, {
                        method: 'GET',
                        headers: {'Content-Type': 'application/json'},
                    });

                    const result = await response.json();
                    if (response.ok) {
                        document.querySelector('.success').classList.remove('hidden');
                        document.querySelector('.success a').textContent = result.creationDate;
                        document.querySelector('.success a').href = '#';
                        document.querySelector('.error').classList.add('hidden');
                    } else {
                        document.querySelector('.error').textContent = `Ошибка: ${result.error || 'Неизвестная ошибка'}`;
                        document.querySelector('.error').classList.remove('hidden');
                        document.querySelector('.success').classList.add('hidden');
                    }
                } catch (error) {
                    document.querySelector('.error').textContent = "Ошибка: невозможно соединиться с сервером.";
                    document.querySelector('.error').classList.remove('hidden');
                    document.querySelector('.success').classList.add('hidden');
                }
            }